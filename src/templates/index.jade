doctype html
html(ng-app="schemeSweet", ng-controller="schemeSweetCtrl")
  head
    base(href="/scheme-sweet/")
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible' content='IE=edge')
    meta(http-equiv='content-type' content='text/html; charset=UTF-8')
    title Scheme Sweet
    meta(
      name='description'
      content="A sweet suite of tools for creating sweet Sublime Text color schemes"
    )
    meta(name='viewport' content='width=device-width, initial-scale=1, minimum-scale=1')
    link(rel='icon' type='image/x-icon' href='favicon.ico')
    link(href='main.min.css' rel='stylesheet' type='text/css' media='all')
    link(href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet")
    if (release === false)
      link(
        href='https://fonts.googleapis.com/css?family=Roboto:400,100,300,100italic,300italic,400italic,500,500italic,700,700italic,900,900italic|Roboto+Mono:400,500,700'
        rel='stylesheet'
        type='text/css'
      )
      script(src="//localhost:35729/livereload.js" async)
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular.js")
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular-route.js")
    else
      link(
        href='https://fonts.googleapis.com/css?family=Roboto:400,500|Roboto+Mono:500'
        rel='stylesheet'
        type='text/css'
      )
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular.min.js")
      script(src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.9/angular-route.min.js")
    script(src='https://cdn.jsdelivr.net/tinycolor/1.3.0/tinycolor-min.js')
    script(src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.10/clipboard.min.js")
    script(src="main.min.js")
  body
    .view-container(ng-style="{'background': scheme.palette.background}")
      .view-pane.toolbar-wrapper
        .toolbar.clearfix
          .toolbar-meta
            h1.page-head Scheme Sweet
            p.page-meta Create a sweet Sublime Text color scheme.
          .toolbar-buttons
            button.call-to-action.edit-metadata(
              ng-click="toggleActiveModal('metadata')"
              ng-class="{active: isActiveModal('metadata')}"
            )
              i.material-icons settings
              |Edit Info
            button.call-to-action.download(
              ng-click="prepareScheme()"
              ng-class="{active: isActiveModal('download')}"
              ng-disabled="!schemeIsValid()"
            )
              i.material-icons file_download
              |Download
      .view-pane.palette-wrapper
          .palette-item-wrapper(ng-repeat="(name, color) in scheme.palette")
            .palette-item(ng-style="{'background': color, 'color': getContrastColor()}")
              .palette-item-head
                p.palette-meta {{name}}
                .palette-item-toolbar
                  .palette-item-toolbar-item
                    i.material-icons.tip.tip-w(
                      ng-click="randomize()"
                      aria-label="Randomize Color"
                    ) shuffle
              .palette-item-body
                input.color-input(
                  type="text"
                  ng-model="scheme.palette[name]"
                  value="{{color}}"
                  ng-change="workspace.schemeHasChanged = true;"
                )
    .modal.modal-metadata(ng-class="{active: isActiveModal('metadata')}")
      .modal-header
        h1.modal-title Metadata
        i.modal-close.material-icons(ng-click="closeModal()") close
      .modal-body
        .metadata-inputs
          .metadata-fieldgroup
            input.metadata-input#scheme-name(
              type="text"
              placeholder="What's your color scheme's name?"
              ng-maxlength=50
              ng-required="required"
              ng-value="scheme.metadata.name"
              ng-model="scheme.metadata.name"
              ng-change="workspace.schemeHasChanged = true;"
            )
            label.metadata-input-label(for="scheme-name") Name
          .metadata-fieldgroup
            input.metadata-input#scheme-author(
              type="text"
              placeholder="Who made this?"
              ng-maxlength=180
              ng-required="required"
              ng-value="scheme.metadata.author"
              ng-model="scheme.metadata.author"
              ng-change="workspace.schemeHasChanged = true;"
            )
            label.metadata-input-label(for="scheme-author") Author
          .metadata-fieldgroup
            input.metadata-input#scheme-description(
              type="text"
              placeholder="What's your color scheme about?"
              ng-maxlength=180
              ng-required="required"
              ng-value="scheme.metadata.comment"
              ng-model="scheme.metadata.comment"
              ng-change="workspace.schemeHasChanged = true;"
            )
            label.metadata-input-label(for="scheme-description") Description
    .modal.modal-download(ng-class="{active: isActiveModal('download')}")
      .modal-header
        h1.modal-title {{scheme.metadata.name}}
          span.de-emph .tmTheme
        i.modal-close.material-icons(ng-click="closeModal()") close
      .modal-body
        code.scheme-preview#tmtheme {{builtScheme}}
      .modal-footer
        p.modal-label Copy the scheme then save it as {{scheme.metadata.name}}.tmTheme
        button#download.call-to-action.download(
          ngclipboard
          data-clipboard-target="#tmtheme"
          ngclipboard-success="copySuccess(e)"
          ng-class="{success: workspace.copied}"
        ) Copy Color Scheme
